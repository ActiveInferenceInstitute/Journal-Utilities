SPEAKER_01:
Thanks for having me here.

I'm actually, this is gonna stay, I think I'm gonna try to, because it's 20 minutes, I'm gonna bounce through a lot of ideas and sort of hopefully peg them for more detailed, involved discussions during sort of workshops and stuff this afternoon, rather than trying to go really deep into anything in particular.

With that in mind, I'm going to talk about complexity in social and economic systems as sort of a leading point.

So the reason that we have sort of these complex emergent behaviors in our socio-technical systems is that we are fundamentally modifying the environment that we participate in.

Actually, there's some interesting analogies to discussion of sort of biological evolution where our bacteria was functionally changing the environment, and that changing environment changed the fitness landscape for the participation in that environment.

And we're actually doing this in sort of macro human scale by engineering on the world and inventing things and building new technologies and fundamentally modifying the means with which we interact with each other and our environment, which in turn our social and economic behaviors adapt to.

So this is sort of behavioral evolution.

I'm going to be focusing on this from a sort of social behavior and social ecological perspective.

But I always find it fun to talk about how the sort of complex feedback dynamic emerges in these sort of what I would call cyber-physical systems.

And anyway, this is sort of the main entry point.

We have this overlap between the sort of temporal dynamics, how we behave, how that behavior changes the environment, and how in turn the changed environment changes our behaviors.

The sort of paradigms for complexity in engineering are not particularly new.

I like to point out that the socio-technical systems paradigm was introduced in the 50s.

The sort of second order cybernetics and the discussion of sort of control systems and the way in which our, the way we organize our societies and organize systems becomes part of those systems itself is sort of introduced in the 70s and was very popular in the sort of

I don't know, like late Cold War, post-Soviet application of engineering to sort of human systems.

And now actually we have something that is a little bit newer.

I like the term cyber-physical systems.

They are things like our power grids where there are the economic loads put on the grid, the physical network infrastructure,

the plants and various other forms of sort of business entities that actually collectively, you know, source power, source materials, source labor, like all the way down to the economics at the individual consumption of power level.

Those systems are highly networked.

And in fact, we see things like cascade failures when sort of part of a

power system goes down the loads get shifted and you can actually have the same systems that make the resilient in the short term can make it fragile because you sort of pick up the loads that were dropped and if that over sort of overloads the system then you see more things go down these are actually some of our best physical networked

sort of multi-layer systems that exist today and I think it behooves us to study them as part of our sort of what I would say more social system studies as I get into sort of decentralized organizations.

This is going to be more about human coordination in a less physical sense.

So this is a slide that I've actually given a 20-minute talk just on, so I'm not going to do that right now.

But I am going to highlight the fact that there's sort of a partition here across silos and across what I'm going to call, I'm going to call it scale here.

I don't know that's the right word, at least in this context.

But our silos here are areas of expertise or sort of

Places where you can have understanding of the mechanics, the dynamics, or behaviors in a social context and economic context.

Here, technology is here generally information technology, and physical is the sort of more, you know, the environment or the physical environment that you're interacting with.

And there are lots of cases where we look at one or two of these things together, but when in our increasingly interconnected systems, it's very difficult to fraction them apart from each other and still have a coherent view of what I'll call a generalized ecology.

Like if this is a social and economic ecology, then the environment is defined by technology and the physical environment.

But as the rate of change of the technological or physical systems rises, it becomes less appropriate to separate the time scales.

And so we kind of have to reason them as systems that are co-evolving between social, economic, and technological and physical.

But in order to do that, when we pull that all into context, we can't necessarily look at the full depth at the same time.

So we sort of trade our slice and silos

for a slice and layers.

And the way that I've done this breakdown in my work is to focus on our sort of global systemic goals, value flows, like the desired emergent properties of a system, which are the byproduct of the specific local agent behavior, which is itself

constrained by the patterns of interaction so patterns of interaction basically say what does it mean to interact what is interacting that's different from what interactions actually occur which is different from which sort of global properties emerge as a result of those interactions so this is still quite

sort of evolutionary dynamics like, and as we get down into this trusted computation and durable data, now we're talking about the way in which sort of novel information technologies are allowing us to sort of program these environments because we have cryptographically guaranteed execution of code.

This is a bit like writing your own rules of a mini universe.

You're saying,

You are allowed to do this and not that.

And if you attempt to do something that the system doesn't allow, it just doesn't happen.

Unlike our traditional economic systems, where basically you do anything that you get away with, you pre prescribe what you can and cannot do in these environments and an attempt to violate those sort of coded natural laws breaks.

But what's really tricky about this is that you don't really do this at a very human intuitive level to make it work well.

you're generally working in very abstract spaces.

You're defining

you're defining the very notion of what is possible at an abstract level, and it backs up to the fact that you have durable, the last layer is what I call durable data or trustworthy state information, which means that these computations can be state-dependent, which is what gives them real-world-like properties.

If you just have trusted computation but computation isn't able to write or read a trustworthy state,

then you don't get the capacity to sort of embed state-dependent dynamics, to internalize externalities.

You want things to have the same property of the physical world.

If I want to move the state of the system, I need to expend some energy or expend some resource.

I can't simply arbitrage an environment.

I have to actually pay the price of moving it, and therefore I only change the system insofar as I really...

you know, the cost is worth it.

And so there's this Pareto response that says, yeah, OK, I wanted to move the system, but I don't want to move it ad infinitum because moving the system costs me energy.

And as long as my capacity is finite, I can't diverge the system.

If we want to talk a lot more math later during breakouts, I'm happy to do it.

This is a conceptual framework for being able to go from basically to create sort of programmable environments where you actually have reasonable predictability of emergent properties, but the

point here is that emergent properties are not defined as equilibrium in the sense of exactly this will happen, rather they're quite the opposite.

They live in much higher orders, like if the system can be changed according to a certain set of rules, that means it has a set of reachable spaces, and you're actually just restricting those reachable spaces.

And that means that you have some underlying universal properties that can be thought of as some

we often don't function in a high dimensional space over a part of the space maps to zero or stays within a ball around a set because moving out of that set is costly and that the system is sort of attracted back into that set.

But this isn't a statement about the state, the first order state.

This is often a statement about the second or even the third derivative.

It's constraining how much the system can move away from a subspace in a highly expanded view of the world.

The last conversation has me really wanting to go into math, but I'm not going to do it.

I'm going to talk a little bit more about the technology because one of the reasons I came here today was to try to give this community more knowledge about what this technology stack can do,

rules that define networks decentralized networks and configurations through which peers interact at the computational level you can form peer-to-peer networks which are essentially communication and computation networks where each peer is essentially provably following the rules of the protocol and their behaviors are not controlled just the rules about what valid behavior is

And the byproduct of that low-level technology is to enable sets of higher-level interaction patterns, which are sort of, if this is computation and communication network, this is sort of social and economic behavior, where what one can do agent to agent here is a property of what this peer-to-peer network exposes.

So this gives you the rules of this world and enforces them, and thus individual interactions are, hey, whatever follows the rules, but then collectively those fit into these larger networks of interacting activity, sort of ecologies of behavior, which actually result in emergent properties.

And from a design perspective, you have to basically...

make claims about what you want, what you're trying to achieve up here, work backwards through this conceptual stack towards what I can actually build, and roll back up to defining these things and essentially enabling and measuring the extent to which you're achieving your desired properties.

We generally approach this using a sort of formal scientific and engineering process, which mixes basically three kinds of science, right?

We have analytical.

Most of the system design is Lyapunov theory.

A lot of it, because I run a private research company, is part of projects.

I'm working on writing some papers and some tutorials when time's available.

But the core sort of high-dimensional representations of systems in abstract mathematical spaces allows you to do computer-aided design, essentially run simulations of those systems and refine your understanding of those systems.

and then ultimately implementing things, observing real data, which creates a sort of standard scientific feedback loop, but we're trying to basically understand the implications of our decisions about social and economic rules.

One of the probably most important points that I make ever is that whenever you're doing this, you are making subjective choices about objective measures.

There isn't an objective fitness in this sense.

Like people like to,

reason as if there is one and more often than not you have to pick one to reason and then you have to back out and sensitivity test and understand what is the implication of making that assumption because you don't get to say well this is the social utility of the system like even if you go into social choice theory like there's a million ideas and none of them are inherently right and often they even conflict with each other

So you have to basically say, I've systematized this social and economic co-evolutionary system, and at various points in the process, I have made subjective choices of objective measures.

And so one of the most important parts about being a designer of these kinds of systems is to actually be explicit every time you do this and find ways to A-B test or sensitivity test those assumptions.

So sensitivity test when you parameterize things, A-B test with alternative metrics,

and repeat the same experiments computationally when possible with different measures and see how robust the results that you've gotten.

So something might, you know, have nice dynamics and converge to an equilibrium under some, and here I mean equilibrium in the sense that there's a low dimensional attractive subspace, not that the whole system somehow converges to something static.

whether or not those spaces, the behavior patterns, the sort of ultimate emergent non-equilibrium dynamics that have some properties actually are desirable is also subjective.

It's a really weird place to be because you're sort of forced to simultaneously objectify, but to do it well you can't actually trust your own objectifications.

Anyway, so I'm going to talk a little bit about decentralization and organizations, because I think these terms semantically cause a lot of challenges.

And in order to actually make any meaningful progress on any project, you have to sort of

get on the same page.

So I define organizations in terms of networks, and just simply say that you have, it can be multi-scale, but for simplicity, we'll talk about a network of individuals.

A network of individuals is basically going to say, well, I have some form of interaction with another party, and I have this interconnected web of labor, activity, exchange, trade, whatever, and my organization can be defined as essentially a network of individuals.

I, for the most part, am dealing with sort of open social and economic environments, so an organization might be a community in the sense that we know each other or have people in common, or it might be something more formal like a corporation or a community that you join or have to get permission to join.

In order to keep something formal and abstract, we're just basically defining them as networks over agents.

And when you have a network over agents, you need to understand what does it mean to have a link, and a link is a function of coordination, and for whatever the context is, we can talk about, well, we want to do something together, whatever it is, and I have some rules, requirements, limitations, whatever, and you do, and then the feasible space of links that we could form between us is basically the overlap between these two things.

And if there's no overlap, then

We don't link and it's no big deal because the system doesn't require that everybody's linked to everyone.

We just have to have this idea that there's this network formation game embedded in the idea of an organization as a network that determines whether or not we choose to persist a relationship.

And that is an abstract concept because all we really want is the graph at this point.

You need a specific problem space, a problem to be working on, where this collapses to a specific

So something specific, like an agreement in one of the projects that I worked on was to teach a class.

It was a project called Odum.

It's an on-demand education marketplace.

And the agreement pattern was a multi-party, someone offers to teach, basically,

puts out a thing that says, I'll teach this class for this much money if so many people sign up, et cetera, et cetera.

And people can sign up.

And once the preconditions are met for an event, it's essentially locked in.

And there are penalties for reneging and breaking the collective contract.

But that's a sort of a feasible agreement space followed by sort of events that transpire.

And then ultimately, if the conditions are met, it's sort of determined to be sort of an agreement, and at which point reneging it has costs.

But that's a specific example.

The point is that you can construct sort of arbitrary coordination problems of the form.

Each participant has a set of requirements, and there's an intersection, and only the agreements that fulfill the needs of all of the parties would...

constitute a feasible, complete agreement.

And then I'm probably not going to try to go into this too much.

One of the biggest challenges here is that these things are multiscale.

So you can't just flatten it always and look at one sort of community or one group.

A lot of the times you have to examine the way multiple communities interact with each other.

So it's like, you know, the network itself is, is got a network implied by the sort of co-participation.

And I use myself as an example, right?

So individually I am sort of motivated by impactful science and engineering research, but I also have a sort of a context as a member of a family where I expect some

you know, physical health and emotional connection, I run a firm, I have a professional community, I'm part of a government and society, I care about this sort of world system and its sustainable health.

I ultimately, at every one of these levels of scale, I could be a participant in multiple communities and I have individual relationships, but I also have

firm to firm relationships and I have even professional community to professional community relationships.

I ended up here because one of my collaborators in the sort of engineering research domain around social and economic networks was invited and he lives in Berlin.

So he was like, oh, hey, you live in San Francisco.

Can you go speak to this community?

And so that, at some level, was an individual connection that was manifest as part of a professional connection.

So one has to be really careful even about slicing these networks too finely when there's multi-scaling going on.

This really, though, comes down to scoping problems well.

if you acknowledge the sort of super scope, then you can prune it down to find the right dotted line boundaries that help you solve the problem at hand without having an a priori assumption of, you know, here's the template, you just model it like this.

And I've found that to be particular.


SPEAKER_00:
Depends on how you like to define your networks.

In math, it's like...

Fields is dynamic.


SPEAKER_01:
Right, so networks can be dynamic, but the mathematical object is richer.

It's like saying time varies.

It's just a mathematical state object that contains essentially nodes and edges, and even it can have multiple classes of node, multiple classes of edges.

The presence or absence of a node or edge can...

can exit or leave over time.

So I generally work with dynamical systems and optimal control frameworks, having come from a much more robotic AI decision theory background.

And so I basically assume everything is dynamic, state-dependent, and stochastic.

But that's when I get into my math.

And then we start to collapse as much of that out as is appropriate, but you start with the assumption that basically things are a big honking mess, and then you try to figure out which things you can collapse out and retain good paradigm

like paradigm fit.

You want the model that you're imposing to be as useful, as fit as well to the problem at hand as possible, but you actually start with something obnoxiously general and abstract, and you collapse it onto the problem at hand, rather than sort of start with a template and say, how do I fit my problem into the template I have?

That's an element of process for me.

I find it to be pretty useful.


SPEAKER_00:
There's actually an area of math that I call the adaptive networks, where it's like dynamics on the network, and then also dynamics of the network topology itself changing over time.

And so there's different layers of dynamicism and the math to explain it on the network.


SPEAKER_01:
Yeah, sorry.

So that's like multi-scaling in time in addition to multi-scaling in space.

So when you talk about the multi-layers of time scales, you have to deal with, much like we were discussing in the biological sense, you have environmental evolution, you have this network evolving, essentially what I would have called the ecology evolving, which is different even from the individual agents, strategies, or behaviors evolving.

So the issue is that you can't always handle all of those things at the same time.

So you need to figure out what things have separable time scales.

What can I assume is constant because it's moving too slow?

What can I assume is constant because it's so fast that it's at equilibrium?

And then there's some temporal phase in the middle that you can actually focus on.

But it depends on the question at hand.

There's not an a priori absolute right scale.

You kind of have to...

have this really big complex view of the world that's too messy to work with and then collapse it onto the problem at hand if you want to be able to sort of make meaningful progress.

That's the experience that I've had.

So I want to talk briefly about what decentralization is because this term is also...

very, very loaded, especially in the technical space that I'm in right now.

We have decentralization in a bunch of different metrics.

So we can think of it in terms of peer to peer versus centralized.

It's decentralized if you have a more peer to peer architecture.

It's centralized if you rely on a central

but the notion of a central authority or a bottleneck can depend on a lot of different things.

So in the sense of transparency, this is access to information.

The system is decentralized in the sense that anyone who is participating sort of permissively has access to information, which is different from the way that decision authority is exercised.

You can have systems that have a high degree of information access but highly centralized decision-making authority.

Actually, my favorite examples are around the evolution of things like Uber and Lyft and Airbnb as centralized technology platforms that allow for decentralized activity.

open access to information at the level of who's available to say provide you a service you have individual rights to make a decision to say go out and drive and there's not a lot of intermediation but there's still heavy intermediation at the technological level and the blockchain community in particular is pushing to make this this technological system more decentralized but often they

sort of conflate this with the decision-making authority decentralization because even if you decentralize the technology the social and political and economic behaviors can actually remain very centralized even though they're ostensibly structurally the information access is available the platform allows it to be decentralized but the behavior is still very much like oligarchy

So you have to recognize the difference between something technologically decentralized and something where the actual emergent behavior is decentralized.

OK.

Yes?


SPEAKER_00:
Lightning moon for replace.

Cool.


SPEAKER_01:
So I won't show these examples from my work, but later this afternoon.

Yes.